import { __awaiter } from "tslib";
import { JCM_DEFAULT_SETTINGS } from '../settings';
import OpenAIApi from "openai";
export const getAISummary = (textToSummarize) => __awaiter(void 0, void 0, void 0, function* () {
    const openai = new OpenAIApi({
        apiKey: JCM_DEFAULT_SETTINGS.azureOpenAIKey,
    });
    const prompt = JCM_DEFAULT_SETTINGS.atomPrompt + textToSummarize;
    const response = yield openai.chat.completions.create({
        model: JCM_DEFAULT_SETTINGS.azureOpenAIDeployment,
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 100, // Adjust max tokens as needed
    });
    return response.choices[0].message.content;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXp1cmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xvdWQvYXp1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNuRCxPQUFPLFNBQVMsTUFBTSxRQUFRLENBQUM7QUFFL0IsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQU8sZUFBdUIsRUFBRSxFQUFFO0lBQzFELE1BQU0sTUFBTSxHQUFHLElBQUksU0FBUyxDQUFDO1FBQ3pCLE1BQU0sRUFBRSxvQkFBb0IsQ0FBQyxjQUFjO0tBQzlDLENBQUMsQ0FBQztJQUVILE1BQU0sTUFBTSxHQUFHLG9CQUFvQixDQUFDLFVBQVUsR0FBRyxlQUFlLENBQUM7SUFFakUsTUFBTSxRQUFRLEdBQUcsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7UUFDbEQsS0FBSyxFQUFFLG9CQUFvQixDQUFDLHFCQUFxQjtRQUNqRCxRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBQyxDQUFDO1FBQzVDLFdBQVcsRUFBRSxHQUFHO1FBQ2hCLFVBQVUsRUFBRSxHQUFHLEVBQUUsOEJBQThCO0tBQ2xELENBQUMsQ0FBQztJQUVILE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQy9DLENBQUMsQ0FBQSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSkNNX0RFRkFVTFRfU0VUVElOR1MgfSBmcm9tICcuLi9zZXR0aW5ncyc7IFxuaW1wb3J0IE9wZW5BSUFwaSBmcm9tIFwib3BlbmFpXCI7XG5cbmV4cG9ydCBjb25zdCBnZXRBSVN1bW1hcnkgPSBhc3luYyAodGV4dFRvU3VtbWFyaXplOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBvcGVuYWkgPSBuZXcgT3BlbkFJQXBpKHtcbiAgICAgICAgYXBpS2V5OiBKQ01fREVGQVVMVF9TRVRUSU5HUy5henVyZU9wZW5BSUtleSxcbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCBwcm9tcHQgPSBKQ01fREVGQVVMVF9TRVRUSU5HUy5hdG9tUHJvbXB0ICsgdGV4dFRvU3VtbWFyaXplO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBvcGVuYWkuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgICBtb2RlbDogSkNNX0RFRkFVTFRfU0VUVElOR1MuYXp1cmVPcGVuQUlEZXBsb3ltZW50LCAvLyBTcGVjaWZ5IHRoZSBkZXBsb3ltZW50IG5hbWVcbiAgICAgICAgbWVzc2FnZXM6IFt7IHJvbGU6ICd1c2VyJywgY29udGVudDogcHJvbXB0fV0sXG4gICAgICAgIHRlbXBlcmF0dXJlOiAwLjksXG4gICAgICAgIG1heF90b2tlbnM6IDEwMCwgLy8gQWRqdXN0IG1heCB0b2tlbnMgYXMgbmVlZGVkXG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2UuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnQ7XG59Il19